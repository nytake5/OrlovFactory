version: '3.4'

services:
  postgres:
    image: postgres:13.3
    container_name: "postgres"
    environment:
      POSTGRES_DB: "Factory"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "2323"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Factory"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  redis:
    image: docker.io/bitnami/redis:7.0
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'

  rabbitmq3:
        image: rabbitmq:3.8-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER=orlov
            - RABBITMQ_DEFAULT_PASS=2323
        ports:
            # AMQP protocol port
            - '5672:5672'
            # HTTP management UI
            - '15672:15672'
  web_api:
    build:
      context: .
      dockerfile: Factory.WebApi/Dockerfile
    ports:
      - "5001:80"
  telegram_bot:
    build:
      context: .
      dockerfile: Factory.AuthBot/Dockerfile
  frontend:
    build:
      context: .
      dockerfile: UI/factory-ui/Dockerfile
    ports:
      - "80:4200"
    depends_on:
      - telegram_bot
volumes:
  redis_data:
    driver: local